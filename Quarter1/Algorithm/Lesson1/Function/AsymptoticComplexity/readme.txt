Расчет асимптотической сложности функции.

// ---------------------------------
public static int  StrangeSum(int[] inputArray)
{
   int sum = 0; // O(1)
   for (int i = 0; i < inputArray.Length; i++) // N = inputArray.Length --- O(N)
   {
       for (int j = 0; j < inputArray.Length; j++) // O(N)
       {
           for (int k = 0; k < inputArray.Length; k++) // O(N)
           {
               int y = 0; // O(1)

               if (j != 0) // O(1)
               {
                   y = k / j; // O(1)
               }

               sum += inputArray[i] + i + k + j + y; // O(1)
           }
       }
   }

   return sum; // O(1)
}
// ---------------------------------

Расчет асимптотической сложности
Примем длину входного массива за N = inputArray.Length

1. O(1) - константы, ими можно пренебречь. Как константами-слагаемыми, так и константами-множителями (правило 5)
2. Алгоритму внутри каждого шага нужно выполнять вложенные циклы, для расчета общей производительности алгоритма количество шагов перемножается (правило 4).
O(N * N * N) = O( N ^ 3)

Ответ: асимптотическая сложность функции O(N ^ 3), где N - длина входного массива.