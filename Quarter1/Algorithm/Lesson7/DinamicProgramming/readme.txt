Благодаря этой задаче, немного более понятным стало что такое динамическое программирование.

Предположил, что существуют закономерности при расчете вариантов.
Сначала рассчитал несколько вариантов таблиц вручную в блокноте.
Понял, что закономерности какие-то есть, но какие до конца не понятно.
Продолжил расчеты вручную в экселе. Тут удалось найти, расписать алгоритм. Он ниже.

В коде планировал использовать массив int[,], но работа с linq потребовала
гораздо большего количества кода, потому в алгоритме ниже расписано для
массива, а в коде использовал List<struct>.

Алгоритм
/*
общая идея расчета, итерации идут по колонкам таблицы.
Для рачета каждой следующей колонки можно использовать количество вариантов,
рассчитанное для предыдущей колонки. Тогда не придется каждый раз пересчитывать
все варианты.
"Расчет для колонки" значит с начальной позиции двигаться только вправо
до рассчитываемой колонки, после чего рассчитываются все возможные варианты путей.

Сокращение перебираемых вариантов значительно ускоряет вычисления
*/

Если строк = 1 или колонок, значит вариантов = 1. Вернуть ответ.
Иначе
Нужно завести массив, размерностью (M * (N - 1), 3)
	Где M - количество колонок, N - количество строк.
	А 3 элемента второй размерности это колонки массива, хранящие:
		Номер колонки,
		Номер строки,
		Количество вариантов
Затем для первых N - 1 элементов заполнить единицами.
Затем перебираем (цикл Mx) все колонки со 2 по M
	Внутри цикл Nx по всем строкам с (N - 1) до 1
И заполняем массив по следующей логике.
1. В ячейку 
	arr[(Mx - 1) * (N - 1) + (N - 1 - Nx), 0] = Mx
	arr[(Mx - 1) * (N - 1) + (N - 1 - Nx), 1] = Nx
	arr[(Mx - 1) * (N - 1) + (N - 1 - Nx), 2] =
		нужно взять (linq) из этого же массива все значения для колонки Mx - 1 (arr[any, 0] = Mx - 1)
		+ ограничить выборку количеством строк условием arr[any, 1] <= Nx
		в полученных записях сложить arr[any, 2] и это записать в ячейку, расписанную выше.
2. Искомое количество вариантов путей будет =
выбрать из массива все элементы, индексы которых
	кратны (N - 1)
	сумма всех найденных вариантов arr[any, 2] и будет искомым числом.

где Mx это перебираемая колонка, Nx - перебираемая строка